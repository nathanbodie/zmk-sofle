#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// Include ZMK helpers if available
// #include "zmk-helpers/helper.h"

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Define key positions for your keyboard layout
#define KEYS_L  0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 52 53 54 55 56 57  // Left-hand keys
#define KEYS_R  6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 58 59 60 61 62 63  // Right-hand keys  
#define THUMBS  55 56 57 59 60 61  // Thumb keys

/ {

// Define macros for special key combinations
macros {
    win_switch: win_switch {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LA(TAB)>;
        label = "WIN_SWITCH";
    };
    
    tab_prev: tab_prev {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LC(LS(TAB))>;
        label = "TAB_PREV";
    };
    
    tab_next: tab_next {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LC(TAB)>;
        label = "TAB_NEXT";
    };
    
    vol_up: vol_up {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_UP>;
        label = "VOL_UP";
    };
    
    vol_dn: vol_dn {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_DN>;
        label = "VOL_DN";
    };
    
    back_btn: back_btn {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp C_AC_BACK>;
        label = "BACK_BTN";
    };
    
    fwd_btn: fwd_btn {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp C_AC_FORWARD>;
        label = "FWD_BTN";
    };
    
    play_pause: play_pause {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp C_PP>;
        label = "PLAY_PAUSE";
    };
    
    // Parameterized macro for Ctrl+Cmd+Opt combinations
    ctrl_cmd_opt: ctrl_cmd_opt {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER>;
        label = "CTRL_CMD_OPT";
    };
};

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N1            &kp N2            &kp N3            &kp N4         &kp N5              &kp UP_ARROW     &kp N6      &kp N7            &kp N8            &kp N9            &kp N0            &kp BACKSPACE
&kp TAB    &kp X             &kp F             &kp L             &kp K          &kp Q               &kp DOWN_ARROW   &kp P       &kp G             &kp O             &kp U             &kp COMMA         &kp BSLH
&kp LALT   &kp N             &kp S             &kp H             &kp T          &kp M               &kp LEFT_ARROW   &kp Y       &kp C             &kp A             &kp E             &kp I             &kp APOS
&kp LGUI   &kp B             &kp V             &kp J             &kp D          &kp Z               &kp RIGHT_ARROW  &kp APOS    &kp W             &kp SEMI          &kp SLASH         &kp DOT           &kp ENTER
&kp C_MUTE &kp LCTRL         &kp LEFT_GUI      &lt 5 ESC         &lt 1 SPACE    &sk LSHFT           &kp ENTER        &lt 3 BSPC  &lt 2 R           &mt LALT TAB      &kp RIGHT_SHIFT   &tog 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "NIGHT";
        };

        layer_1 {
            bindings = <
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_UP     &trans           &trans           &trans      &trans     &trans   &trans
&trans      &kp N7           &kp N5          &kp N3           &kp N1           &kp N9             &mmv MOVE_DOWN   &kp N8           &kp N0           &kp N2      &kp N4     &kp N6   &trans
&kp CAPS    &sk LCTRL        &sk LALT        &sk LGUI         &sk LSHFT        &kp F11            &mmv MOVE_LEFT   &kp F10          &sk RSHFT        &sk RGUI    &sk RALT   &sk RCTRL   &trans
&trans      &kp F7           &kp F5          &kp F3           &kp F1           &kp F9             &mmv MOVE_RIGHT  &kp F8           &kp F12          &kp F2      &kp F4     &kp F6    &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_UP     &trans           &trans           &trans      &trans     &trans        &trans
&trans      &kp TAB          &win_switch     &tab_prev        &tab_next        &vol_up            &mmv MOVE_DOWN   &bootloader      &kp HOME         &kp BSPC    &kp END    &kp CAPS      &trans
&trans      &sk LCTRL        &sk LALT        &sk LGUI         &sk LSHFT        &vol_dn            &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP      &kp RIGHT  &kp DEL       &trans
&trans      &trans           &trans          &back_btn        &fwd_btn         &play_pause        &mmv MOVE_RIGHT  &trans           &kp PG_DN        &kp PG_UP   &trans     &kp ENTER     &trans
&trans      &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "NAV";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_UP     &trans           &trans           &trans      &trans     &trans  &trans
&trans      &kp ESC          &kp LBKT        &kp LBRC         &kp LPAR         &kp TILDE          &mmv MOVE_DOWN   &kp CARET        &kp RPAR         &kp RBRC    &kp RBKT   &kp GRAVE  &trans
&trans      &kp MINUS        &kp ASTRK       &kp EQUAL        &kp UNDER        &kp DLLR           &mmv MOVE_LEFT   &kp HASH         &sk RSHFT        &sk RGUI    &sk RALT   &sk RCTRL  &trans
&trans      &kp PLUS         &kp PIPE        &kp AT           &kp BSLH         &kp PRCNT          &mmv MOVE_RIGHT  &trans           &kp AMPS         &kp SEMI    &kp COLON  &kp EXCL &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&kp ESC     &kp N1           &kp N2          &kp N3           &kp N4           &kp N5             &kp UP_ARROW     &kp N6           &kp N7           &kp N8      &kp N9     &kp N0     &kp BACKSPACE
&kp TAB     &kp Q            &kp W           &kp E            &kp R            &kp T              &kp DOWN_ARROW   &kp Y            &kp U            &kp I       &kp O      &kp P      &kp BSLH
&kp LCTRL   &kp A            &kp S           &kp D            &kp F            &kp G              &kp LEFT_ARROW   &kp H            &kp J            &kp K       &kp L      &kp SEMI   &kp APOS
&kp LSHFT   &kp Z            &kp X           &kp C            &kp V            &kp B              &kp RIGHT_ARROW  &kp N            &kp M            &kp COMMA   &kp DOT    &kp SLASH  &kp ENTER
&kp C_MUTE  &kp LALT         &kp CAPS        &kp LALT         &kp SPACE        &kp LGUI           &mkp LCLK        &kp SPACE        &kp RALT         &kp RGUI    &kp RCTRL  &trans
            >;

            display-name = "GAMING";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            bindings = <
&trans           &trans           &trans               &trans               &trans               &trans               &trans           &trans           &trans           &trans           &trans           &trans           &trans
&trans           &trans           &ctrl_cmd_opt N7     &ctrl_cmd_opt N8     &ctrl_cmd_opt N9     &trans               &trans           &trans           &trans           &trans           &trans           &trans           &trans
&trans           &kp LSHIFT       &ctrl_cmd_opt N1     &ctrl_cmd_opt N2     &ctrl_cmd_opt N3     &ctrl_cmd_opt N0     &trans           &trans           &trans           &trans           &trans           &trans           &trans
&trans           &trans           &ctrl_cmd_opt N4     &ctrl_cmd_opt N5     &ctrl_cmd_opt N6     &trans               &trans           &trans           &trans           &trans           &trans           &trans           &trans
&trans           &trans           &trans               &trans               &trans               &trans               &trans           &trans           &trans           &trans           &trans           &trans
            >;

            display-name = "AEROSPACE";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
